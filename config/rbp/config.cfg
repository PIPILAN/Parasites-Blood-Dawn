# Configuration file

defaults {
    # Whether blocks without specified block definitions should be given one by default (helpful for applying physics to mod blocks automatically).
    # [default: false]
    B:ApplyDefaultBlocks=false

    # A list of block IDs and namespace IDs which will be prevented from receiving a default physics definition.
    S:ApplyDefaultBlocksBlacklist <
        minecraft
        dynamictrees
     >

    # Whether dimensions without specified world definitions should be given one by default (helpful for applying physics to mod dimensions automatically).
    # [default: false]
    B:ApplyDefaultWorlds=false

    # A list of dimension IDs which will be prevented from receiving a default world definition.
    S:ApplyDefaultWorldsBlacklist <
     >

    ##########################################################################################################
    # default_block
    #--------------------------------------------------------------------------------------------------------#
    # The default block definition to apply to blocks without one (requires 'ApplyDefaultBlocks' to be enabled).
    ##########################################################################################################

    default_block {
        # The strength of the block[s] as a beam supporting blocks above.
        D:BeamStrength=0.0

        # The chance of the block[s] breaking after falling and landing.
        D:BreakChanceOnLanded=0.2

        # Whether the block[s] should break instead of falling.
        B:BreakOnFalling=false

        # The minimum velocity, in meters per tick, the block[s] must be travelling at before they have a chance of breaking.
        D:BreakVelocityMinOnLanded=0.5

        # The damage the block[s] will cause to entities after falling and landing on them.
        D:EntityDamage=2.0

        # Whether the block[s] should have a fake full-block collision box.
        B:FakeFullBlock=false

        # Whether the block[s] should be allowed to float on water.
        B:FloatsOnWater=false

        # Whether the block[s] should be allowed to attach to the side of other blocks.
        B:IsAttachable=true

        # Whether the block[s] should be allowed to attach to the bottom of other blocks.
        B:IsHangable=true

        # The mass of the block[s], in kilograms.
        I:Mass=650

        # Whether the block[s] will receive chunk updates.
        B:ReceivesChunkUpdates=true

        # Whether the block[s] will receive neighbouring block updates.
        B:ReceivesNeighbourUpdates=true

        # The chance of the block[s] sliding after falling and landing.
        D:SlideChanceOnLanded=0.6

        # The chance of the block[s] sliding after being placed.
        D:SlideChanceOnPlaced=0.0

        # The maximum mass the block[s] can support horizontally and vertically.
        I:SupportMass=3000
    }

}


main {
    # The chance of crushable blocks dropping their items when crushed.
    # [default: 1.0]
    D:CrushedBlockItemDropChance=1.0

    # The chance of falling blocks dropping their items when broken.
    # [default: 1.0]
    D:FallingBlockItemDropChance=1.0

    # Relocates falling blocks that fall into the same position as others instead of breaking them.
    # [default: true]
    B:FallingBlockRelocation=true

    # Whether falling blocks should emit sounds.
    # [default: true]
    B:FallingBlockSounds=true

    # Whether physics for vanilla falling blocks should be overridden.
    # [default: true]
    B:OverrideVanillaPhysics=true

    # Specifies which physics engine to use for block physics calculations.
    # 	0: Default - The most realistic experience.
    # 	1: Legacy - The old physics engine.
    # 	2: Simple - A more casual experience.
    # [default: 0]
    I:PhysicsEngine=0
}


performance {
    # Dictates the requirements for a chunk update (a full physics update on all its blocks).
    # 	0: Chunks will update as they are loaded. (worst performance)
    # 	1: Chunks will only update whenever the player enters or interacts with a chunk.
    # 	2: Chunks will only update whenever the player interacts with a chunk.
    #   3: Chunks will not receive initial updates. (best performance)
    # [default: 0]
    I:ChunkUpdateMode=0

    # The maxiumum distance, in chunks, where block physics are updated.
    # 	+ Raise this value to allow blocks to fall from further away.
    # 	- Lower this value to help improve performance.
    # [range: 0 --> 32] 
    # [default: 4]
    I:ChunkUpdateRange=4

    # The maximum amount of falling blocks, per update, which can be added to the world.
    # 	+ Raise this value to allow for faster falling structures.
    # 	- Lower this value to help improve performance.
    # [range: 1 --> 100] 
    # [default: 2]
    I:FallingBlockFallRate=2

    # [Client] The maximum distance, in blocks, falling blocks will be rendered and updated.
    # 	+ Raise this value to see falling blocks from further away.
    # 	- Lower this value to help improve performance.
    # [range: 16 --> 256] 
    # [default: 64]
    I:FallingBlockTrackingRange=64

    # The delay, in ticks, between movement update processing.
    # 	+ Raise this value to help improve performance.
    # 	- Lower this value to allow for faster falling structures.
    # [range: 0 --> 20] 
    # [default: 0]
    I:TickSkips=0
}


